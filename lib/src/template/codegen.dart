// Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

/** Collects common snippets of generated code. */
library codegen;

import 'analyzer.dart';

/** Header with common imports, used in every generated .dart file. */
String header(FileInfo info) => """
// Generated Dart class from HTML template ${info.filename}.
// DO NOT EDIT.

#library('${info.libraryName}');

#import('dart:html');
#import('package:web_components/web_component.dart');
#import('package:web_components/watcher.dart');
${_importList(info.imports.getKeys())}

${info.userCode}
""";

/** The code in .dart files generated for a web component. */
String componentCode(
    String className,
    String tagName,
    String userCode,
    String extraFields,
    String createdBody,
    String insertedBody,
    String removedBody) => """
class $className extends WebComponent {
  /** User written code associated with '$tagName'. */
$userCode
  /** Autogenerated from the template. */

$extraFields

  $className.forElement(e) : super.forElement(e);

  void created(Element root) {
$createdBody
  }

  void inserted() {
$insertedBody
  }

  void removed() {
$removedBody
  }
}
""";

// TODO(jmesserly): is raw triple quote enough to escape the HTML?
/** The code in the main.html.dart generated file. */
String mainDartCode(
    String headerAndComponents,
    String topLevelFields,
    String fieldInitializers,
    String modelBinding,
    String initialPage) => """
$headerAndComponents

/** Generated code. */
$topLevelFields

/** Create the views and bind them to models. */
void init() {
  // Create view.
  var root = new DocumentFragment.html(_INITIAL_PAGE);

  // Initialize fields.
$fieldInitializers
  // Attach model to views.
$modelBinding

  // Attach view to the document.
  document.body.nodes.add(root);
}

final String _INITIAL_PAGE = r'''
  $initialPage
''';
""";

/** Generate text for a list of imports. */
String _importList(List<String> imports) =>
  Strings.join(imports.map((url) => "#import('$url');"), '\n');
