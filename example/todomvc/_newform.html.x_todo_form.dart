// Auto-generated from newform.html.
// DO NOT EDIT.

library x_todo_form;

import 'dart:html' as autogenerated;
import 'package:web_components/watcher.dart' as autogenerated;

import 'model.dart';
import 'package:web_components/web_component.dart';

class FormComponent extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  var ___e0;
  
  autogenerated.EventListener _listener_submit_1;
  
  var _newTodo;
  
  autogenerated.EventListener _listener_change_2;
  
  FormComponent.forElement(e) : super.forElement(e) {
    _root = createShadowRoot();
  }
  
  void created_autogenerated() {
    if (_root is autogenerated.ShadowRoot) _root.applyAuthorStyles = true;
    
    _root.innerHTML = r'''
    <!-- Note: <form> is to make "enter" work on Opera/IE. -->
    <form data-action="submit:addTodo" id="__e-0">
    <input id="new-todo" placeholder="What needs to be done?" autofocus="" data-action="change:addTodo">
    </form>
    ''';
    
    ___e0 = _root.query('#__e-0');
    
    _newTodo = _root.query('#new-todo');
    
    // Call user-defined created();
    created();
  }
  
  void inserted_autogenerated() {
    _listener_submit_1 = (e) {
      addTodo(e);
      autogenerated.dispatch();
    };
    ___e0.on.submit.add(_listener_submit_1);
    
    _listener_change_2 = (e) {
      addTodo(e);
      autogenerated.dispatch();
    };
    _newTodo.on.change.add(_listener_change_2);
    
    // Call user-defined inserted();
    inserted();
  }
  
  void removed_autogenerated() {
    // Call user-defined removed();
    removed();
    
    ___e0.on.submit.remove(_listener_submit_1);
    _listener_submit_1 = null;
    
    _newTodo.on.change.remove(_listener_change_2);
    _listener_change_2 = null;
    
  }
  
  /** Original code from the component. */
  
  void addTodo(e) {
    e.preventDefault(); // don't submit the form
    if (_newTodo.value == '') return;
    app.todos.add(new Todo(_newTodo.value));
    _newTodo.value = '';
  }
}

